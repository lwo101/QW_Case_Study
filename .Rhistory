head(weather)
weather$V1 <- sub("M N", "MIN", weather$V1)
head(weather)
weather$V1[1] <- "MX000017004195504TMAX"
head(weather)
weather$V1[1] <- 'MX000017004195504TMAX'
head(weather)
weather <- data.frame(lapply(weather, trimws), stringsAsFactors = FALSE)
weather1 <- weather %>%
+ separate(V1, c('Stations_ID', 'Jahr' ),11) %>%
+ separate(Jahr, c('Year', 'Month'),4) %>%
+ separate(Month, c('Month','Element'), 2) %>%
+ separate(Element, c('Element', 'Missing'), sep = '-')
weather1 <- weather %>%
+ separate(V1, c('Stations_ID', 'Jahr' ),11) %>%
+ separate(Jahr, c('Year', 'Month'),4) %>%
+ separate(Month, c('Month','Element'), 2) %>%
+ separate(Element, c('Element', 'Missing'), sep = '-')
weather1 <- weather %>%
separate(V1, c('Stations_ID', 'Jahr' ),11) %>%
separate(Jahr, c('Year', 'Month'),4) %>%
separate(Month, c('Month','Element'), 2) %>%
separate(Element, c('Element', 'Missing'), sep = '-')
head(weather1)
# Installieren und laden von tidyverse
if (!require(tidyverse)){
install.packages("tidyverse")
require(tidyverse)
}
getwd
getwd()
# Installieren und laden von readxl:
if (!require(readxl)){
install.packages("readxl")
require(readxl)
}
# Import von "Bahnhoefe_untidy.xlsx" mit read_excel(): bahnhoefe_untidy
bahnhoefe_untidy <- read_excel("C:\\Users\\Aron\\Documents\\R\\Vorlesung\\VL5\\Bahnhoefe_untidy.xlsx")
# Betrachte die ersten 10 Zeilen von bahnhoefe_untidy mit head():
head(bahnhoefe_untidy)
?unite
# Verbinde die Spalten Bundesland_1 und Bundesland_2 zur neuen Spalte Bundesland. Achte darauf, dass die Werte in der
# neuen Spalte durch einen Bindestrich getrennt sind, indem du das Argument sep = "-" setzt.
bahnhoefe_untidy_01 <- unite(bahnhoefe_untidy, "Bundesland",Bundesland1, Bundesland2, sep = "-")
# Verbinde die Spalten Bundesland_1 und Bundesland_2 zur neuen Spalte Bundesland. Achte darauf, dass die Werte in der
# neuen Spalte durch einen Bindestrich getrennt sind, indem du das Argument sep = "-" setzt.
bahnhoefe_untidy_01 <- unite(bahnhoefe_untidy, "Bundesland",bahnhoefe_untidy$Bundesland1, bahnhoefe_untidy$Bundesland2, sep = "-")
# Verbinde die Spalten Bundesland_1 und Bundesland_2 zur neuen Spalte Bundesland. Achte darauf, dass die Werte in der
# neuen Spalte durch einen Bindestrich getrennt sind, indem du das Argument sep = "-" setzt.
bahnhoefe_untidy_01 <- unite(bahnhoefe_untidy, "Bundesland", "Bundesland1", "Bundesland2", sep = "-")
# Verbinde die Spalten Bundesland_1 und Bundesland_2 zur neuen Spalte Bundesland. Achte darauf, dass die Werte in der
# neuen Spalte durch einen Bindestrich getrennt sind, indem du das Argument sep = "-" setzt.
bahnhoefe_untidy_01 <- unite(bahnhoefe_untidy, "Bundesland", Bundesland_1, Bundesland_2, sep = "-")
# Wähle aus bahnhoefe_untidy_01 mithilfe des '$'-Operators die Spalte Adresse aus und betrachte die ersten 20 Zeilen:
glimpsee(bahnhoefe_untidy_01$Adresse, 20)
# Wähle aus bahnhoefe_untidy_01 mithilfe des '$'-Operators die Spalte Adresse aus und betrachte die ersten 20 Zeilen:
glimpsee(bahnhoefe_untidy_01$Adresse)
# Wähle aus bahnhoefe_untidy_01 mithilfe des '$'-Operators die Spalte Adresse aus und betrachte die ersten 20 Zeilen:
glimpse(bahnhoefe_untidy_01$Adresse)
# Welcher Grundsatz von Clean Data wird in der Spalte Adresse verletzt?
# Wähle aus bahnhoefe_untidy_01 mithilfe des '$'-Operators die Spalte Adresse aus und betrachte die ersten 20 Zeilen:
head(bahnhoefe_untidy_01$Adresse, 20)
# Welcher Grundsatz von Clean Data wird in der Spalte Adresse verletzt?
?seperate
?seperate()
?separate
# Verwende separate(), um den Inhalt der Spalte Adresse auf die Spalten Strasse_Hausnummer, Postleitzahl und Ort
# aufzuteilen.
bahnhoefe_untidy_02 <- seperate(bahnhoefe_untidy_01, Adresse, sep = ";")
# Verwende separate(), um den Inhalt der Spalte Adresse auf die Spalten Strasse_Hausnummer, Postleitzahl und Ort
# aufzuteilen.
bahnhoefe_untidy_02 <- separate(bahnhoefe_untidy_01, Adresse, sep = ";")
# Verwende separate(), um den Inhalt der Spalte Adresse auf die Spalten Strasse_Hausnummer, Postleitzahl und Ort
# aufzuteilen.
bahnhoefe_untidy_02 <- separate(bahnhoefe_untidy_01, Adresse, into = c["Strasse_Hausnummer", "Postleitzahl", "Ort"],  sep = ";")
# Verwende separate(), um den Inhalt der Spalte Adresse auf die Spalten Strasse_Hausnummer, Postleitzahl und Ort
# aufzuteilen.
bahnhoefe_untidy_02 <- separate(bahnhoefe_untidy_01, Adresse, into = c("Strasse_Hausnummer", "Postleitzahl", "Ort"),  sep = ";")
# Betrachte dein Werk mit head():
head(bahnhoefe_untidy_02)
# Verwende separate(), um den Inhalt der Spalte Adresse auf die Spalten Strasse_Hausnummer, Postleitzahl und Ort
# aufzuteilen.
bahnhoefe_untidy_02 <- separate(bahnhoefe_untidy_01, Adresse, into = c("Strasse_Hausnummer", "Postleitzahl", "Ort"),  sep = ";")
# Betrachte dein Werk mit head():
head(bahnhoefe_untidy_02$Adresse)
# Betrachte dein Werk mit head():
head(bahnhoefe_untidy_02)
getwd()
# Betrachte die ersten 10 Zeilen von bahnhoefe_untidy mit head():
head(bahnhoefe_untidy, n = 10)
# Verbinde die Spalten Bundesland_1 und Bundesland_2 zur neuen Spalte Bundesland. Achte darauf, dass die Werte in der
# neuen Spalte durch einen Bindestrich getrennt sind, indem du das Argument sep = "-" setzt.
bahnhoefe_untidy_01 <- unite(bahnhoefe_untidy, Bundesland, Bundesland_1, Bundesland_2, sep = "-")
library(shiny); runApp('R/Vorlesung/VL14/Übung/app_aufgabe.R')
runApp('~/R/Vorlesung/VL14')
runApp('R/Vorlesung/VL14')
library(shiny); runApp('R/Vorlesung/VL15/App nach Uebung 14.R')
clear
clc
setwd("~/GitHub/QW_Case_Study")
library(tidyverse)
?read.csv
komponente_k7 <- read.csv2("Komponente_K7.csv", header = TRUE)
head(komponente_k7)
logistikverzug_k7 <- read.csv2("Logistikverzug_K7.csv", header = TRUE)
head(logistikverzug_k7)
summary(komponente_k7)
glimpse(komponente_k7)
?POSIXct
tail(komponente_k7)
tail(logistikverzug_k7)
logistikverzug_combined_df <- full_join(komponente_k7, logistikverzug_k7, by = "IDNummer")
summary(logistikverzug_combined_df)
head(logistikverzug_combined_df)
logistikverzug_combined_df <- left_join(komponente_k7, logistikverzug_k7, by = "IDNummer")
summary(logistikverzug_combined_df)
head(logistikverzug_combined_df)
glimpse(logistikverzug_combined_df)
logistikverzug_combined_df <- inner_join(komponente_k7, logistikverzug_k7, by = "IDNummer")
glimpse(logistikverzug_combined_df)
view(logistikverzug_combined_df)
View(logistikverzug_combined_df)
logistikverzug_combined_df$Herstellernummer.y <- NULL
logistikverzug_combined_df$Werksnummer.y <- NULL
logistikverzug_combined_df$Fehlerhaft.y <- NULL
logistikverzug_combined_df$X.y <- NULL
head(logistikverzug_combined_df)
logistikverzug_combined_df_renamed <- rename(logistikverzug_combined_df, "X.x" = "X", "Herstellernummer.x" = "Herstellernummer",
"Werksnummer.x" = "Werksnummer", "Fehlerhaft.x" = "Fehlerhaft")
logistikverzug_combined_df_renamed <- rename(logistikverzug_combined_df, "X.x" = X, "Herstellernummer.x" = "Herstellernummer",
"Werksnummer.x" = "Werksnummer", "Fehlerhaft.x" = "Fehlerhaft")
logistikverzug_combined_df_renamed <- rename(logistikverzug_combined_df, c["X.x" = "X", "Herstellernummer.x" = "Herstellernummer",
"Werksnummer.x" = "Werksnummer", "Fehlerhaft.x" = "Fehlerhaft"])
logistikverzug_combined_df_renamed <- rename(logistikverzug_combined_df, c["X.x" = "X", "IDNummer" = "IDNummer", "Produktionsdatum" = "Produktionsdatum","Herstellernummer.x" = "Herstellernummer",
"Werksnummer.x" = "Werksnummer", "Fehlerhaft.x" = "Fehlerhaft", "Wareneingang" = "Wareneingang"])
head(logistikverzug_combined_df_renamed)
logistikverzug_combined_df_renamed <- rename(logistikverzug_combined_df, c("X.x" = "X", "IDNummer" = "IDNummer", "Produktionsdatum" = "Produktionsdatum","Herstellernummer.x" = "Herstellernummer",
"Werksnummer.x" = "Werksnummer", "Fehlerhaft.x" = "Fehlerhaft", "Wareneingang" = "Wareneingang"))
logistikverzug_combined_df_renamed <- rename(logistikverzug_combined_df, c( "X","IDNummer", "Produktionsdatum", "Herstellernummer",
"Werksnummer", "Fehlerhaft", "Wareneingang"))
head(logistikverzug_combined_df_renamed)
head(logistikverzug_combined_df)
?rename
??rename
library(plyr)
# einlesen der Datei Komponente_K7
komponente_k7 <- read.csv2("Komponente_K7.csv", header = TRUE)
# einlesen der Datei Logistikverzug_K7
logistikverzug_k7 <- read.csv2("Logistikverzug_K7.csv", header = TRUE)
# zusammenfügen der beiden Datensätze
logistikverzug_combined_df <- inner_join(komponente_k7, logistikverzug_k7, by = "IDNummer")
# löschen der doppelten Spalten
logistikverzug_combined_df$Herstellernummer.y <- NULL
logistikverzug_combined_df$Werksnummer.y <- NULL
logistikverzug_combined_df$Fehlerhaft.y <- NULL
logistikverzug_combined_df$X.y <- NULL
# umbenennen der Spalten
logistikverzug_combined_df_renamed <- rename(logistikverzug_combined_df, c( "X","IDNummer", "Produktionsdatum", "Herstellernummer",
"Werksnummer", "Fehlerhaft", "Wareneingang"))
logistikverzug_combined_df <- left_join(komponente_k7, logistikverzug_k7, by = "IDNummer")
library(tidyverse)
library(tidyverse)
# einlesen der Datei Komponente_K7
komponente_k7 <- read.csv2("Komponente_K7.csv", header = TRUE)
# einlesen der Datei Logistikverzug_K7
logistikverzug_k7 <- read.csv2("Logistikverzug_K7.csv", header = TRUE)
# zusammenfügen der beiden Datensätze
logistikverzug_combined_df <- left_join(komponente_k7, logistikverzug_k7, by = "IDNummer")
# löschen der doppelten Spalten
logistikverzug_combined_df$Herstellernummer.y <- NULL
logistikverzug_combined_df$Werksnummer.y <- NULL
logistikverzug_combined_df$Fehlerhaft.y <- NULL
logistikverzug_combined_df$X.y <- NULL
# umbenennen der Spalten
logistikverzug_combined_df_renamed <- rename(logistikverzug_combined_df, c( "X","IDNummer", "Produktionsdatum", "Herstellernummer",
"Werksnummer", "Fehlerhaft", "Wareneingang"))
head(logistikverzug_combined_df)
column_names <- c( "X","IDNummer", "Produktionsdatum", "Herstellernummer","Werksnummer", "Fehlerhaft", "Wareneingang")
names(logistikverzug_combined_df) <- column_names
head(logistikverzug_combined_df)
glimpse(logistikverzug_combined_df)
?as.POSIXct
?read.csv2
# einlesen der Datei Komponente_K7
komponente_k7 <- read.csv2("Komponente_K7.csv", header = TRUE, stringsAsFactors = FALSE)
# einlesen der Datei Logistikverzug_K7
logistikverzug_k7 <- read.csv2("Logistikverzug_K7.csv", header = TRUE, stringsAsFactors = FALSE)
# zusammenfügen der beiden Datensätze
logistikverzug_combined_df <- left_join(komponente_k7, logistikverzug_k7, by = "IDNummer")
# löschen der doppelten Spalten
logistikverzug_combined_df$Herstellernummer.y <- NULL
logistikverzug_combined_df$Werksnummer.y <- NULL
logistikverzug_combined_df$Fehlerhaft.y <- NULL
logistikverzug_combined_df$X.y <- NULL
# umbenennen der Spalten
column_names <- c( "X","IDNummer", "Produktionsdatum", "Herstellernummer","Werksnummer", "Fehlerhaft", "Wareneingang")
names(logistikverzug_combined_df) <- column_names
# umwandeln der Spalten "Produktionsdatum" und "Wareneingang" in POSIXct (Format für Datumsangaben)
logistikverzug_combined_df_1 <- as.POSIXct(logistikverzug_combined_df$Produktionsdatum
head(logistikverzug_combined_df)
head(logistikverzug_combined_df)
glimpse(logistikverzug_combined_df)
# umwandeln der Spalten "Produktionsdatum" und "Wareneingang" in POSIXct (Format für Datumsangaben)
logistikverzug_combined_df <- as.POSIXct(logistikverzug_combined_df$Produktionsdatum, "%Y-%m-%d")
glimpse(logistikverzug_combined_df)
library(tidyverse)
# einlesen der Datei Komponente_K7
komponente_k7 <- read.csv2("Komponente_K7.csv", header = TRUE, stringsAsFactors = FALSE)
# einlesen der Datei Logistikverzug_K7
logistikverzug_k7 <- read.csv2("Logistikverzug_K7.csv", header = TRUE, stringsAsFactors = FALSE)
# zusammenfügen der beiden Datensätze
logistikverzug_combined_df <- left_join(komponente_k7, logistikverzug_k7, by = "IDNummer")
# löschen der doppelten Spalten
#logistikverzug_combined_df$Herstellernummer.y <- NULL
#logistikverzug_combined_df$Werksnummer.y <- NULL
#logistikverzug_combined_df$Fehlerhaft.y <- NULL
#logistikverzug_combined_df$X.y <- NULL
logistikverzug_combined_df_1 <-  select(logistikverzug_combined_df, 1:6, 12)
# umbenennen der Spalten
column_names <- c( "X","IDNummer", "Produktionsdatum", "Herstellernummer","Werksnummer", "Fehlerhaft", "Wareneingang")
names(logistikverzug_combined_df_1) <- column_names
head(logistikverzug_combined_df)
logistikverzug_combined_df_1 <-  select(logistikverzug_combined_df, 1:6, 8)
head(logistikverzug_combined_df_1)
# umbenennen der Spalten
column_names <- c( "X","IDNummer", "Produktionsdatum", "Herstellernummer","Werksnummer", "Fehlerhaft", "Wareneingang")
names(logistikverzug_combined_df_1) <- column_names
head(logistikverzug_combined_df_1)
glimpse(logistikverzug_combined_df_1)
logistikverzug_combined_df_2 <- as.POSIXct(logistikverzug_combined_df_1$Produktionsdatum, "", "%Y-%m-%d")
glimpse(logistikverzug_combined_df_2)
logistikverzug_combined_df_1 <- as.POSIXct(logistikverzug_combined_df_1$Produktionsdatum, "", "%Y-%m-%d")
glimpse(logistikverzug_combined_df_1)
library(tidyverse)
# einlesen der Datei Komponente_K7
komponente_k7 <- read.csv2("Komponente_K7.csv", header = TRUE, stringsAsFactors = FALSE)
# einlesen der Datei Logistikverzug_K7
logistikverzug_k7 <- read.csv2("Logistikverzug_K7.csv", header = TRUE, stringsAsFactors = FALSE)
# zusammenfügen der beiden Datensätze
logistikverzug_combined_df <- left_join(komponente_k7, logistikverzug_k7, by = "IDNummer")
# löschen der doppelten Spalten
logistikverzug_combined_df_1 <-  select(logistikverzug_combined_df, 1:6, 8)
# umbenennen der Spalten
column_names <- c( "X","IDNummer", "Produktionsdatum", "Herstellernummer","Werksnummer", "Fehlerhaft", "Wareneingang")
names(logistikverzug_combined_df_1) <- column_names
# umwandeln der Spalten "Produktionsdatum" und "Wareneingang" in POSIXct (Format für Datumsangaben)
as.POSIXct(logistikverzug_combined_df_1$Produktionsdatum, "", "%Y-%m-%d")
as.POSIXct(logistikverzug_combined_df_1$Wareneingang, "", "%d.%m.%Y")
glimpse(logistikverzug_combined_df_1)
logistikverzug_combined_df_1$Produktionsdatum <- as.POSIXct(logistikverzug_combined_df_1$Produktionsdatum, "", "%Y-%m-%d")
glimpse(logistikverzug_combined_df_1)
logistikverzug_combined_df_1$Wareneingang <- as.POSIXct(logistikverzug_combined_df_1$Wareneingang, "", "%d.%m.%Y")
glimpse(logistikverzug_combined_df_1)
head(logistikverzug_combined_df_1)
logistikverzug_combined_df_1$Wareneingang (1)
logistikverzug_combined_df_1$Wareneingang [1]
logistikverzug_combined_df_1$Wareneingang [1] - logistikverzug_combined_df_1$Produktionsdatum[1]
?summarise
# erstellen einer neuen Spalte mit den Werten des Logistikverzugs
logistikverzug_combined_df_2 <- mutate(logistikverzug_combined_df_1, Logistikverzug = Wareneingang - Produktionsdatum)
head(logistikverzug_combined_df_2)
glimpse(logistikverzug_combined_df_2)
# erstellen einer neuen Spalte mit den Werten des Logistikverzugs in Tagen
logistikverzug_combined_df_2 <- mutate(logistikverzug_combined_df_1, Logistikverzug = as.numeric(Wareneingang) - as.numeric(Produktionsdatum))
glimpse(logistikverzug_combined_df_2)
as.numeric(logistikverzug_combined_df_1$Wareneingang) - as.numeric(logistikverzug_combined_df_1$Produktionsdatum)
logistikverzug_combined_df_2 <- mutate(logistikverzug_combined_df_1, Logistikverzug = Wareneingang - Produktionsdatum)
glimpse(logistikverzug_combined_df_2)
head(logistikverzug_combined_df_2)
as.numeric(logistikverzug_combined_df_1$Produktionsdatum[1])
as.numeric(logistikverzug_combined_df_1$Wareneingang[1])
class(logistikverzug_combined_df_1$Produktionsdatum)
class(logistikverzug_combined_df_2$Logistikverzug)
?difftime
# erstellen einer neuen Spalte mit den Werten des Logistikverzugs in Tagen
logistikverzug_combined_df_2 <- mutate(logistikverzug_combined_df_1, Logistikverzug = as.double(Wareneingang - Produktionsdatum))
head(logistikverzug_combined_df_2)
glimpse(logistikverzug_combined_df_2)
View(logistikverzug_combined_df_2)
summary(logistikverzug_combined_df_2)
library(tidyverse)
# einlesen der Datei Komponente_K7
komponente_k7 <- read.csv2("Komponente_K7.csv", header = TRUE, stringsAsFactors = FALSE)
# einlesen der Datei Logistikverzug_K7
logistikverzug_k7 <- read.csv2("Logistikverzug_K7.csv", header = TRUE, stringsAsFactors = FALSE)
# zusammenfügen der beiden Datensätze
logistikverzug_combined_df <- left_join(komponente_k7, logistikverzug_k7, by = "IDNummer")
# löschen der doppelten Spalten
logistikverzug_selected_df <-  select(logistikverzug_combined_df, 1:6, 8)
# umbenennen der Spalten
column_names <- c( "X","IDNummer", "Produktionsdatum", "Herstellernummer","Werksnummer", "Fehlerhaft", "Wareneingang")
names(logistikverzug_selected_df) <- column_names
# umwandeln der Spalten "Produktionsdatum" und "Wareneingang" in POSIXct (Format für Datumsangaben)
logistikverzug_selected_df$Produktionsdatum <- as.POSIXct(logistikverzug_selected_df$Produktionsdatum, "", "%Y-%m-%d")
logistikverzug_selected_df$Wareneingang <- as.POSIXct(logistikverzug_selected_df$Wareneingang, "", "%d.%m.%Y")
# erstellen einer neuen Spalte mit den Werten des Logistikverzugs in Tagen
logistikverzug_mutated_df <- mutate(logistikverzug_selected_df, Logistikverzug = as.double(Wareneingang - Produktionsdatum))
# der minimale und maximale Logistikverzug lässt sich aus der summary für den Datensatz ablesen
summary(logistikverzug_mutated_df)
View(logistikverzug_mutated_df)
tail(logistikverzug_mutated_df)
hist(logistikverzug_mutated_df$Logistikverzug)
View(logistikverzug_nutated_df)
library(tidyverse)
# einlesen der Datei Komponente_K7
komponente_k7 <- read.csv2("Komponente_K7.csv", header = TRUE, stringsAsFactors = FALSE)
# einlesen der Datei Logistikverzug_K7
logistikverzug_k7 <- read.csv2("Logistikverzug_K7.csv", header = TRUE, stringsAsFactors = FALSE)
# zusammenfügen der beiden Datensätze
logistikverzug_combined_df <- left_join(komponente_k7, logistikverzug_k7, by = "IDNummer")
# löschen der doppelten Spalten
logistikverzug_selected_df <-  select(logistikverzug_combined_df, 1:6, 8)
# umbenennen der Spalten
column_names <- c( "X","IDNummer", "Produktionsdatum", "Herstellernummer","Werksnummer", "Fehlerhaft", "Wareneingang")
names(logistikverzug_selected_df) <- column_names
# umwandeln der Spalten "Produktionsdatum" und "Wareneingang" in POSIXct (Format für Datumsangaben)
logistikverzug_selected_df$Produktionsdatum <- as.POSIXct(logistikverzug_selected_df$Produktionsdatum, "", "%Y-%m-%d")
logistikverzug_selected_df$Wareneingang <- as.POSIXct(logistikverzug_selected_df$Wareneingang, "", "%d.%m.%Y")
# erstellen einer neuen Spalte mit den Werten des Logistikverzugs in Tagen
logistikverzug_mutated_df <- mutate(logistikverzug_selected_df, Lieferzeit = as.double(Wareneingang - Produktionsdatum))
# der minimale und maximale Logistikverzug lassen sich aus der summary für den Datensatz ablesen
summary(logistikverzug_mutated_df)
glimpse(logistikverzug_mutated_df)
plot <- ggplot(data = logistikverzug_mutated_df, mapping = aes(x = Produktionsdatum, y = Lieferzeit)) +
geom_point()
plot
plot <- ggplot(data = logistikverzug_mutated_df, mapping = aes(x = Produktionsdatum, y = Lieferzeit), col = as.factor(Werksnummer)) +
geom_point()
plot
View(logistikverzug_mutated_df)
distinct(logistikverzug_mutated_df$Werksnummer)
?distinct
?unique
unique(logistikverzug_mutated_df$Werksnummer)
unique(logistikverzug_mutated_df$Herstellernummer)
plot <- ggplot(data = logistikverzug_mutated_df, mapping = aes(x = Produktionsdatum, y = Lieferzeit), col = Werksnummer) +
geom_point()
plot
plot <- ggplot(data = logistikverzug_mutated_df, mapping = aes(x = X, y = Lieferzeit), col = Werksnummer) +
geom_point()
plot
plot <- ggplot(data = logistikverzug_mutated_df, mapping = aes(x = Werksnummer, y = Lieferzeit), col = Werksnummer) +
geom_point(alpha = 0.6)
plot
model <- lm(Lieferzeit ~ Produktionsdatum, data = logistikverzug_mutated_df)
# Testplot
plot(logistikverzug_mutated_df$Produktionsdatum, logistikverzug_mutated_df$Lieferzeit, col = as.factor(logistikverzug_mutated_df$Werksnummer))
# Testplot
plot(logistikverzug_mutated_df$Produktionsdatum, logistikverzug_mutated_df$Lieferzeit, col = as.factor(logistikverzug_mutated_df$Herstellernummer))
abline(model, lty = 2)
model <- lm(Lieferzeit ~ Produktionsdatum, data = logistikverzug_mutated_df)
abline(model, lty = 2)
plot(logistikverzug_mutated_df$Produktionsdatum, logistikverzug_mutated_df$Lieferzeit, col = as.factor(logistikverzug_mutated_df$Herstellernummer))
abline(model, lty = 2)
model <- lm(Lieferzeit ~ IDNummer, data = logistikverzug_mutated_df)
# Testplot
plot(logistikverzug_mutated_df$IDNummer, logistikverzug_mutated_df$Lieferzeit, col = as.factor(logistikverzug_mutated_df$Herstellernummer))
abline(model, lty = 2)
View(logistikverzug_mutated_df)
logistikverzug_separated_df <- separate(logistikverzug_mutated_df, col=IDNummer, into = c("a", "b", "c", "d"), sep = "-")
logistikverzug_transformed_df <- transform(logistikverzug_separated_df, a = as.numeric(a), b = as.numeric(b),c = as.numeric(c),d = as.numeric(d))
head(logistikverzug_transformed_df)
logistikverzug_separated_df <- separate(logistikverzug_mutated_df, col=IDNummer, into = c("a", "b", "c", "d"), sep = "-")
logistikverzug_transformed_df <- transform(logistikverzug_separated_df, b = as.numeric(b),c = as.numeric(c),d = as.numeric(d))
head(logistikverzug_transformed_df)
tail(logistikverzug_transformed_df)
logistikverzug_separated_df <- separate(logistikverzug_mutated_df, col=IDNummer, into = c("ID_1", "ID_2", "ID_3", "ID_4"), sep = "-")
logistikverzug_transformed_df <- transform(logistikverzug_separated_df, ID_2 = as.numeric(ID_2),ID_3 = as.numeric(ID_3), ID_4 = as.numeric(ID_4))
head(logistikverzug_transformed_df)
model <- lm(Lieferzeit ~ ID_4, data = logistikverzug_transformed_df)
# Testplot
plot(logistikverzug_transformed_df$ID_4, logistikverzug_transformed_df$Lieferzeit, col = as.factor(logistikverzug_ttransformed_df$Herstellernummer))
abline(model, lty = 2)
model <- lm(Lieferzeit ~ ID_4, data = logistikverzug_transformed_df)
# Testplot
plot(logistikverzug_transformed_df$ID_4, logistikverzug_transformed_df$Lieferzeit, col = as.factor(logistikverzug_transformed_df$Herstellernummer))
abline(model, lty = 2)
# Testplot
hist(logistikverzug_transformed_df$Lieferzeit)
ggplot(logistikverzug_transformed_df, aes(x = Lieferzeit)) +
geom_histogram()
ggplot(logistikverzug_transformed_df, aes(x = Lieferzeit)) +
geom_histogram(binwidth = 1)
ggplot(logistikverzug_transformed_df, aes(x = Lieferzeit)) +
geom_histogram(binwidth = 1, aes(y = ..density..)))
ggplot(logistikverzug_transformed_df, aes(x = Lieferzeit)) +
geom_histogram(binwidth = 1, aes(y = ..density..))
library(tidyverse)
# einlesen der Datei Komponente_K7
komponente_k7 <- read.csv2("Komponente_K7.csv", header = TRUE, stringsAsFactors = FALSE)
# einlesen der Datei Logistikverzug_K7
logistikverzug_k7 <- read.csv2("Logistikverzug_K7.csv", header = TRUE, stringsAsFactors = FALSE)
# zusammenfügen der beiden Datensätze
logistikverzug_combined_df <- left_join(komponente_k7, logistikverzug_k7, by = "IDNummer")
str(logistikverzug_combined_df)
nrow(logistikverzug_combined_df)
# mit dem Befehl str() können wir einen Überblick über den gejointen Datensatz erhalten
str(logistikverzug_combined_df)
# der so gejointe Datensatz enthält 11 Merkmale (Spalten) mit 306490 Zeilen (observations)
# löschen der doppelten Spalten
logistikverzug_selected_df <-  select(logistikverzug_combined_df, 1:6, 8)
# umbenennen der Spalten
column_names <- c( "X","IDNummer", "Produktionsdatum", "Herstellernummer","Werksnummer", "Fehlerhaft", "Wareneingang")
names(logistikverzug_selected_df) <- column_names
# umwandeln der Spalten "Produktionsdatum" und "Wareneingang" in POSIXct (Format für Datumsangaben)
logistikverzug_selected_df$Produktionsdatum <- as.POSIXct(logistikverzug_selected_df$Produktionsdatum, "", "%Y-%m-%d")
logistikverzug_selected_df$Wareneingang <- as.POSIXct(logistikverzug_selected_df$Wareneingang, "", "%d.%m.%Y")
# erstellen einer neuen Spalte mit der Lieferzeit in Tagen
logistikverzug_mutated_df <- mutate(logistikverzug_selected_df, Lieferzeit = as.double(Wareneingang - Produktionsdatum))
# Bestimmung der minimalen und maximalen Lieferzeit
min(logistikverzug_mutated_df$Lieferzeit)
max(logistikverzug_mutated_df$Lieferzeit)
summary(logistikverzug_mutated_df)
# Beginn der Shiny Applikation
library(shiny)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
)
),
# Erstellung des Main-Panels mit zwei verschiedenen Reitern
mainPanel(
tabsetPanel(
# Erstellung des ersten Reiters
tabPanel(
title = "Produktionsmenge",
div = "Produktionsmenge"
),
# Erstellung des zweiten Reiters
tabPanel(
title = "Karosserien in Auslieferung",
div("Karosserien in Auslieferung")
)
)
)
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
runApp('~/R/Vorlesung/VL_Shiny')
runApp('Case_Study_Allgemeine_Aufgaben.R')
runApp('Case_Study_Allgemeine_Aufgaben.R')
runApp('~/R/Vorlesung/VL_Shiny/App nach Uebung 14.R')
runApp('Case_Study_Allgemeine_Aufgaben.R')
min(logistikverzug_mutated_df$Produktionsdatum)
max(logistikverzug_mutated_df$Wareneingang)
max(logistikverzug_mutated_df$Produktionsdatum)
min(logistikverzug_mutated_df$Wareneingang)
runApp('Case_Study_Allgemeine_Aufgaben.R')
runApp('Case_Study_Allgemeine_Aufgaben.R')
library(tidyverse)
# einlesen der Datei Komponente_K7
komponente_k7 <- read.csv2("Komponente_K7.csv", header = TRUE, stringsAsFactors = FALSE)
# einlesen der Datei Logistikverzug_K7
logistikverzug_k7 <- read.csv2("Logistikverzug_K7.csv", header = TRUE, stringsAsFactors = FALSE)
# zusammenfügen der beiden Datensätze
logistikverzug_combined_df <- left_join(komponente_k7, logistikverzug_k7, by = "IDNummer")
# bei doppelt vorkommenden Spalten benennt R die Spalte des ersten Datasets mit .x und die Spalte mit gleichem Namen des zweiten Datasets mit .y
# mit dem Befehl str() können wir einen Überblick über den gejointen Datensatz erhalten
# str(logistikverzug_combined_df)
# der so gejointe Datensatz enthält 11 Merkmale (Spalten) mit 306490 Zeilen (observations)
# löschen der doppelten Spalten
logistikverzug_selected_df <-  select(logistikverzug_combined_df, 1:6, 8)
# umbenennen der Spalten
column_names <- c( "X","IDNummer", "Produktionsdatum", "Herstellernummer","Werksnummer", "Fehlerhaft", "Wareneingang")
names(logistikverzug_selected_df) <- column_names
# umwandeln der Spalten "Produktionsdatum" und "Wareneingang" in POSIXct (Format für Datumsangaben)
logistikverzug_selected_df$Produktionsdatum <- as.POSIXct(logistikverzug_selected_df$Produktionsdatum, "", "%Y-%m-%d")
logistikverzug_selected_df$Wareneingang <- as.POSIXct(logistikverzug_selected_df$Wareneingang, "", "%d.%m.%Y")
# erstellen einer neuen Spalte mit der Lieferzeit in Tagen
logistikverzug_mutated_df <- mutate(logistikverzug_selected_df, Lieferzeit = as.double(Wareneingang - Produktionsdatum))
# Bestimmung der minimalen und maximalen Lieferzeit
min(logistikverzug_mutated_df$Lieferzeit)
max(logistikverzug_mutated_df$Lieferzeit)
# AUfteilung der Spalte "IDNummer" in mehrere Spalten mit int Datentypen (möglicherweise nicht nötig)
logistikverzug_separated_df <- separate(logistikverzug_mutated_df, col=IDNummer, into = c("ID_1", "ID_2", "ID_3", "ID_4"), sep = "-")
logistikverzug_transformed_df <- transform(logistikverzug_separated_df, ID_2 = as.numeric(ID_2),ID_3 = as.numeric(ID_3), ID_4 = as.numeric(ID_4))
View(logistikverzug_mutated_df)
?unique
?distinct
distinct(logistikverzug_mutated_df$Lieferzeit)
class(logistikverzug_mutated_df$Lieferzeit)
unique(logistikverzug_mutated_df$Lieferzeit)
? round
logistikverzug_mutated_df <- mutate(logistikverzug_selected_df, Lieferzeit = round(as.double(Wareneingang - Produktionsdatum), digits = 0))
unique(logistikverzug_mutated_df$Lieferzeit)
ggplot(dat, aes(x=logistikverzug_mutated_df)) +
geom_density
ggplot(logistikverzug_mutated_df, aes(x=Lieferzeit)) +
geom_density()
ggplot(logistikverzug_mutated_df, aes(x=Lieferzeit)) +
geom_freqpoly()
liferzeiten_unique <- unique(logistikverzug_mutated_df$Lieferzeit)
nrow(liferzeiten_unique)
ncol(liferzeiten_unique)
liferzeiten_unique
distinct(liferzeiten_unique)
?ncol
NROW(liferzeiten_unique)
ggplot(logistikverzug_transformed_df, aes(x = Lieferzeit)) +
geom_histogram(binwidth = 1, aes(y = ..density..))
lieferzeiten_unique <- unique(logistikverzug_mutated_df$Lieferzeit)
n_lieferzeiten<- NROW(lieferzeiten_unique)
ggplot(logistikverzug_transformed_df, aes(x = Lieferzeit)) +
geom_histogram(binwidth = 1, aes(y = ..density..), bins = n_lieferzeiten)
?poisson
plot(density(logistikverzug_mutated_df$Lieferzeit),main="Density estimate of data")
logistikverzug_mutated_df <- mutate(logistikverzug_selected_df, Lieferzeit = as.double(Wareneingang - Produktionsdatum, digits = 0))
plot(density(logistikverzug_mutated_df$Lieferzeit),main="Density estimate of data")
ggplot(logistikverzug_transformed_df, aes(x = Lieferzeit)) +
geom_histogram(binwidth = 1, aes(y = ..density..), bins = n_lieferzeiten)
?fitdistr
